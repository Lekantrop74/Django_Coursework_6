from django.core.management.base import BaseCommand
from django.utils.text import slugify

from forwarding.models import Messages
import random

from users.models import User

THEMES = [
    "Важное уведомление",
    "Поздравления с праздником",
    "Информация о заказе",
    "Приглашение на мероприятие",
    "Обновление условий обслуживания",
    "Благодарность за покупку",
    "Промокод на скидку",
    "Подтверждение регистрации",
    "Оповещение об отмене",
    "Новости компании",
]

BODIES = [
    "Уважаемый клиент, мы рады сообщить вам об акции, которая будет действовать в течение недели...",
    "Дорогой клиент, поздравляем вас с наступающим праздником. Желаем вам много радости и счастья...",
    "Здравствуйте! Ваш заказ был успешно обработан и отправлен на доставку. Вы можете отслеживать его статус...",
    "Приглашаем вас на наше мероприятие, которое состоится в эту субботу. Будем рады видеть вас среди гостей...",
    "Уважаемый клиент, мы обновили условия обслуживания нашей компании. Вы можете ознакомиться с ними на нашем сайте...",
    "Спасибо, что выбрали нашу компанию для покупки продукции. Мы ценим каждого нашего клиента и готовы предложить...",
    "Получите скидку 20% на следующую покупку, используя промокод HAPPY20. Акция действует до конца месяца...",
    "Добро пожаловать в наше сообщество! Вы успешно зарегистрировались на нашем сайте. Теперь вы можете...",
    "Извините за неудобства, но ваш заказ был отменен по техническим причинам. Мы вернули деньги на ваш счет...",
    "Дорогие клиенты, рады сообщить вам о новых достижениях нашей компании. Мы получили престижную награду...",
]


class Command(BaseCommand):
    help = 'Создает контент для моделей Messages'

    def handle(self, *args, **options):
        themes_count = len(THEMES)
        bodies_count = len(BODIES)
        users = User.objects.all()

        for i in range(themes_count):
            theme = THEMES[i % themes_count]
            body = BODIES[i % bodies_count]
            owner = random.choice(users)
            slug = slugify(theme)

            # Проверить, существует ли сообщение с такой же темой
            existing_message = Messages.objects.filter(theme=theme).first()
            if existing_message is None:
                # Создать новое сообщение, только если его еще нет в базе данных
                Messages.objects.create(theme=theme, body=body, owner=owner, slug=slug)
        self.stdout.write(self.style.SUCCESS('Успешно созданы 10 объектов модели Messages.'))
